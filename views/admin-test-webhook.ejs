<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tes Webhook Midtrans</title>
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <header>
        <h1>ðŸ”¬ Tes Notifikasi Midtrans</h1>
        <p><a href="/admin/dashboard" style="color: white;">Kembali ke Dashboard</a></p>
    </header>
    <main class="container">
        <div class="card">
            <div class="card-header"><h2>Simulasi Notifikasi Pembayaran Sukses</h2></div>
            <p style="color: var(--text-secondary); margin-bottom: 20px;">
                Buat pesanan baru dari halaman user, lalu salin No. Transaksi (cth: GASS-17...) dari status PENDING di dashboard dan tempel di bawah ini.
            </p>
            <div class="form-group">
                <label for="orderId">Masukkan Order ID (No. Transaksi)</label>
                <input type="text" id="orderId" placeholder="GASS-...">
            </div>
            <button id="testButton" class="btn-order">Kirim Notifikasi Tes</button>
            <div id="result" style="margin-top: 20px; padding: 15px; border-radius: 6px; display: none;"></div>
        </div>
    </main>

    <script>
        document.getElementById('testButton').addEventListener('click', async () => {
            const orderId = document.getElementById('orderId').value;
            const resultDiv = document.getElementById('result');

            if (!orderId) {
                alert('Harap masukkan Order ID!');
                return;
            }

            // Ini adalah contoh data yang dikirim oleh Midtrans saat pembayaran sukses
            const midtransPayload = {
                transaction_time: new Date().toISOString(),
                transaction_status: "settlement", // settlement = sukses
                transaction_id: crypto.randomUUID(),
                status_message: "midtrans payment notification",
                status_code: "200",
                signature_key: "ini-akan-diverifikasi-oleh-library",
                payment_type: "qris",
                order_id: orderId,
                merchant_id: "G123456",
                gross_amount: "10000.00",
                fraud_status: "accept",
                currency: "IDR"
            };

            try {
                const response = await fetch('/midtrans-notification', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(midtransPayload),
                });

                resultDiv.style.display = 'block';
                if (response.ok) {
                    resultDiv.innerText = `Sukses! Server merespons dengan status ${response.status}. Cek status order di dashboard.`;
                    resultDiv.style.backgroundColor = 'var(--success-color)';
                } else {
                    resultDiv.innerText = `Gagal! Server merespons dengan status error ${response.status}. Cek log di terminal nodemon.`;
                    resultDiv.style.backgroundColor = 'var(--danger-color)';
                }

            } catch (error) {
                resultDiv.style.display = 'block';
                resultDiv.innerText = `Error: ${error.message}`;
                resultDiv.style.backgroundColor = 'var(--danger-color)';
            }
        });
    </script>
</body>
</html>